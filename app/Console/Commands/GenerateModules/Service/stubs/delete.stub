<?php

namespace {{ deleteServiceNamespace }};

use App\Modules\{{ service }}\Repository\{{ service }}RepoInterface;
use App\Modules\Base\Domain\BaseService;
use App\Modules\Common\Domain\Payload;

class {{ service }}Delete extends BaseService
{
    private $fetch;
    private $repo;

    public function __construct({{ service }}Fetch $fetch,{{ service }}RepoInterface $repo)
    {
        $this->fetch = $fetch;
        $this->repo = $repo;
    }

    public function __invoke(int $id): Payload
    {
        if((${{service}} = $this->fetch->__invoke($id))->getStatus() != 'FOUND'){
            return ${{service}};
        }
        $this->repo->delete($id);
        $message = '{{service}} deleted';
        return $this->newPayload(Payload::STATUS_DELETED, compact('message'));
    }
}
